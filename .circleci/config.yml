version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15.1
    working_directory: /tmp/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: (frontend) Install packages
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: frontend-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: (frontend) Build
          command: npm run build:ci
          environment:
            NODE_PATH: src/
            REACT_APP_VERSION: 0.1
      - save_cache:
          paths:
            - build
          key: build-{{ .Branch }}-{{ .Revision }}

  deploy:
    docker:
      - image: circleci/node:10.15.1
    working_directory: /tmp/app
    steps:
      - restore_cache:
          keys:
            - build-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Install system dependencies
          command: sudo apt-get -y -qq install python-setuptools python-dev build-essential && sudo easy_install pip && pip install awscli --upgrade --user
      - run:
          name: Remove old assets => S3
          command: ~/.local/bin/aws s3 rm ${APP_S3_BUCKET}static/ --recursive
      - run:
          name: Upload new assets => S3
          command: ~/.local/bin/aws s3 cp build ${APP_S3_BUCKET} --acl public-read --recursive
      - run:
          name: Invalidate Cloudfront cache
          command: ~/.local/bin/aws configure set preview.cloudfront true && ~/.local/bin/aws cloudfront create-invalidation --distribution-id ${APP_CF_DISTRIBUTION} --paths "/" "/*"

workflows:
  version: 2
  build-deploy-release:
    jobs:
      - build:
          context: builder-prd
          filters:
            branches:
              only: release
      - deploy:
          context: builder-prd
          requires:
            - build
  build-deploy-release-cn:
    jobs:
      - build:
          context: builder-prd-cn
          filters:
            branches:
              only: release-cn
      - deploy:
          context: builder-prd-cn
          requires:
            - build
  build-deploy-staging:
    jobs:
      - build:
          context: builder-stg
          filters:
            branches:
              only: staging
      - deploy:
          context: builder-stg
          requires:
            - build
  # build-deploy-master:
  #   jobs:
  #     - build:
  #         context: builder-dev
  #         filters:
  #           branches:
  #             only: master
  #     - deploy:
  #         context: builder-dev
  #         requires:
  #           - build
  build-branch:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
                - staging
                - release
                - release-cn
