/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TypedEventDescription, TypedFunctionDescription } from ".";

interface ERC721CollectionV2Interface extends Interface {
  functions: {
    COLLECTION_HASH: TypedFunctionDescription<{ encode([]: []): string }>;

    ISSUED_ID_BITS: TypedFunctionDescription<{ encode([]: []): string }>;

    ITEM_ID_BITS: TypedFunctionDescription<{ encode([]: []): string }>;

    MAX_ISSUED_ID: TypedFunctionDescription<{ encode([]: []): string }>;

    MAX_ITEM_ID: TypedFunctionDescription<{ encode([]: []): string }>;

    addItems: TypedFunctionDescription<{
      encode([_items]: [
        {
          rarity: string;
          price: BigNumberish;
          beneficiary: string;
          metadata: string;
        }[]
      ]): string;
    }>;

    approve: TypedFunctionDescription<{
      encode([to, tokenId]: [string, BigNumberish]): string;
    }>;

    balanceOf: TypedFunctionDescription<{ encode([owner]: [string]): string }>;

    baseURI: TypedFunctionDescription<{ encode([]: []): string }>;

    batchTransferFrom: TypedFunctionDescription<{
      encode([_from, _to, _tokenIds]: [string, string, BigNumberish[]]): string;
    }>;

    completeCollection: TypedFunctionDescription<{ encode([]: []): string }>;

    createdAt: TypedFunctionDescription<{ encode([]: []): string }>;

    creator: TypedFunctionDescription<{ encode([]: []): string }>;

    decodeTokenId: TypedFunctionDescription<{
      encode([_id]: [BigNumberish]): string;
    }>;

    domainSeparator: TypedFunctionDescription<{ encode([]: []): string }>;

    editItemsData: TypedFunctionDescription<{
      encode([_itemIds, _prices, _beneficiaries, _metadatas]: [
        BigNumberish[],
        BigNumberish[],
        string[],
        string[]
      ]): string;
    }>;

    encodeTokenId: TypedFunctionDescription<{
      encode([_itemId, _issuedId]: [BigNumberish, BigNumberish]): string;
    }>;

    executeMetaTransaction: TypedFunctionDescription<{
      encode([userAddress, functionSignature, sigR, sigS, sigV]: [
        string,
        Arrayish,
        Arrayish,
        Arrayish,
        BigNumberish
      ]): string;
    }>;

    getApproved: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    getChainId: TypedFunctionDescription<{ encode([]: []): string }>;

    getNonce: TypedFunctionDescription<{ encode([user]: [string]): string }>;

    globalManagers: TypedFunctionDescription<{ encode([]: [string]): string }>;

    globalMinters: TypedFunctionDescription<{ encode([]: [string]): string }>;

    initialize: TypedFunctionDescription<{
      encode([
        _name,
        _symbol,
        _baseURI,
        _creator,
        _shouldComplete,
        _isApproved,
        _rarities,
        _items,
      ]: [
        string,
        string,
        string,
        string,
        boolean,
        boolean,
        string,
        {
          rarity: string;
          price: BigNumberish;
          beneficiary: string;
          metadata: string;
        }[]
      ]): string;
    }>;

    isApproved: TypedFunctionDescription<{ encode([]: []): string }>;

    isApprovedForAll: TypedFunctionDescription<{
      encode([owner, operator]: [string, string]): string;
    }>;

    isCompleted: TypedFunctionDescription<{ encode([]: []): string }>;

    isEditable: TypedFunctionDescription<{ encode([]: []): string }>;

    isInitialized: TypedFunctionDescription<{ encode([]: []): string }>;

    isMintingAllowed: TypedFunctionDescription<{ encode([]: []): string }>;

    issueTokens: TypedFunctionDescription<{
      encode([_beneficiaries, _itemIds]: [string[], BigNumberish[]]): string;
    }>;

    itemManagers: TypedFunctionDescription<{
      encode([,]: [BigNumberish, string]): string;
    }>;

    itemMinters: TypedFunctionDescription<{
      encode([,]: [BigNumberish, string]): string;
    }>;

    items: TypedFunctionDescription<{ encode([]: [BigNumberish]): string }>;

    itemsCount: TypedFunctionDescription<{ encode([]: []): string }>;

    name: TypedFunctionDescription<{ encode([]: []): string }>;

    owner: TypedFunctionDescription<{ encode([]: []): string }>;

    ownerOf: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    rarities: TypedFunctionDescription<{ encode([]: []): string }>;

    renounceOwnership: TypedFunctionDescription<{ encode([]: []): string }>;

    rescueItems: TypedFunctionDescription<{
      encode([_itemIds, _contentHashes, _metadatas]: [
        BigNumberish[],
        Arrayish[],
        string[]
      ]): string;
    }>;

    safeBatchTransferFrom: TypedFunctionDescription<{
      encode([_from, _to, _tokenIds, _data]: [
        string,
        string,
        BigNumberish[],
        Arrayish
      ]): string;
    }>;

    safeTransferFrom: TypedFunctionDescription<{
      encode([from, to, tokenId]: [string, string, BigNumberish]): string;
    }>;

    setApprovalForAll: TypedFunctionDescription<{
      encode([operator, approved]: [string, boolean]): string;
    }>;

    setApproved: TypedFunctionDescription<{
      encode([_value]: [boolean]): string;
    }>;

    setBaseURI: TypedFunctionDescription<{
      encode([_baseURI]: [string]): string;
    }>;

    setEditable: TypedFunctionDescription<{
      encode([_value]: [boolean]): string;
    }>;

    setItemsManagers: TypedFunctionDescription<{
      encode([_itemIds, _managers, _values]: [
        BigNumberish[],
        string[],
        boolean[]
      ]): string;
    }>;

    setItemsMinters: TypedFunctionDescription<{
      encode([_itemIds, _minters, _values]: [
        BigNumberish[],
        string[],
        BigNumberish[]
      ]): string;
    }>;

    setManagers: TypedFunctionDescription<{
      encode([_managers, _values]: [string[], boolean[]]): string;
    }>;

    setMinters: TypedFunctionDescription<{
      encode([_minters, _values]: [string[], boolean[]]): string;
    }>;

    supportsInterface: TypedFunctionDescription<{
      encode([interfaceId]: [Arrayish]): string;
    }>;

    symbol: TypedFunctionDescription<{ encode([]: []): string }>;

    tokenByIndex: TypedFunctionDescription<{
      encode([index]: [BigNumberish]): string;
    }>;

    tokenOfOwnerByIndex: TypedFunctionDescription<{
      encode([owner, index]: [string, BigNumberish]): string;
    }>;

    tokenURI: TypedFunctionDescription<{
      encode([_tokenId]: [BigNumberish]): string;
    }>;

    totalSupply: TypedFunctionDescription<{ encode([]: []): string }>;

    transferCreatorship: TypedFunctionDescription<{
      encode([_newCreator]: [string]): string;
    }>;

    transferFrom: TypedFunctionDescription<{
      encode([from, to, tokenId]: [string, string, BigNumberish]): string;
    }>;

    transferOwnership: TypedFunctionDescription<{
      encode([newOwner]: [string]): string;
    }>;
  };

  events: {
    AddItem: TypedEventDescription<{
      encodeTopics([_itemId, _item]: [BigNumberish | null, null]): string[];
    }>;

    Approval: TypedEventDescription<{
      encodeTopics([owner, approved, tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    ApprovalForAll: TypedEventDescription<{
      encodeTopics([owner, operator, approved]: [
        string | null,
        string | null,
        null
      ]): string[];
    }>;

    BaseURI: TypedEventDescription<{
      encodeTopics([_oldBaseURI, _newBaseURI]: [null, null]): string[];
    }>;

    Complete: TypedEventDescription<{ encodeTopics([]: []): string[] }>;

    CreatorshipTransferred: TypedEventDescription<{
      encodeTopics([_previousCreator, _newCreator]: [
        string | null,
        string | null
      ]): string[];
    }>;

    Issue: TypedEventDescription<{
      encodeTopics([_beneficiary, _tokenId, _itemId, _issuedId, _caller]: [
        string | null,
        BigNumberish | null,
        BigNumberish | null,
        null,
        null
      ]): string[];
    }>;

    MetaTransactionExecuted: TypedEventDescription<{
      encodeTopics([userAddress, relayerAddress, functionSignature]: [
        null,
        null,
        null
      ]): string[];
    }>;

    OwnershipTransferred: TypedEventDescription<{
      encodeTopics([previousOwner, newOwner]: [
        string | null,
        string | null
      ]): string[];
    }>;

    RescueItem: TypedEventDescription<{
      encodeTopics([_itemId, _contentHash, _metadata]: [
        BigNumberish | null,
        null,
        null
      ]): string[];
    }>;

    SetApproved: TypedEventDescription<{
      encodeTopics([_previousValue, _newValue]: [null, null]): string[];
    }>;

    SetEditable: TypedEventDescription<{
      encodeTopics([_previousValue, _newValue]: [null, null]): string[];
    }>;

    SetGlobalManager: TypedEventDescription<{
      encodeTopics([_manager, _value]: [string | null, null]): string[];
    }>;

    SetGlobalMinter: TypedEventDescription<{
      encodeTopics([_minter, _value]: [string | null, null]): string[];
    }>;

    SetItemManager: TypedEventDescription<{
      encodeTopics([_itemId, _manager, _value]: [
        BigNumberish | null,
        string | null,
        null
      ]): string[];
    }>;

    SetItemMinter: TypedEventDescription<{
      encodeTopics([_itemId, _minter, _value]: [
        BigNumberish | null,
        string | null,
        null
      ]): string[];
    }>;

    Transfer: TypedEventDescription<{
      encodeTopics([from, to, tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    UpdateItemData: TypedEventDescription<{
      encodeTopics([_itemId, _price, _beneficiary, _metadata]: [
        BigNumberish | null,
        null,
        null,
        null
      ]): string[];
    }>;
  };
}

export class ERC721CollectionV2 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ERC721CollectionV2;
  attach(addressOrName: string): ERC721CollectionV2;
  deployed(): Promise<ERC721CollectionV2>;

  on(event: EventFilter | string, listener: Listener): ERC721CollectionV2;
  once(event: EventFilter | string, listener: Listener): ERC721CollectionV2;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ERC721CollectionV2;
  removeAllListeners(eventName: EventFilter | string): ERC721CollectionV2;
  removeListener(eventName: any, listener: Listener): ERC721CollectionV2;

  interface: ERC721CollectionV2Interface;

  functions: {
    COLLECTION_HASH(overrides?: UnsignedTransaction): Promise<string>;

    "COLLECTION_HASH()"(overrides?: UnsignedTransaction): Promise<string>;

    ISSUED_ID_BITS(overrides?: UnsignedTransaction): Promise<number>;

    "ISSUED_ID_BITS()"(overrides?: UnsignedTransaction): Promise<number>;

    ITEM_ID_BITS(overrides?: UnsignedTransaction): Promise<number>;

    "ITEM_ID_BITS()"(overrides?: UnsignedTransaction): Promise<number>;

    MAX_ISSUED_ID(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "MAX_ISSUED_ID()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    MAX_ITEM_ID(overrides?: UnsignedTransaction): Promise<number>;

    "MAX_ITEM_ID()"(overrides?: UnsignedTransaction): Promise<number>;

    addItems(
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "addItems((string,uint256,address,string)[])"(
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    balanceOf(
      owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    baseURI(overrides?: UnsignedTransaction): Promise<string>;

    "baseURI()"(overrides?: UnsignedTransaction): Promise<string>;

    batchTransferFrom(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "batchTransferFrom(address,address,uint256[])"(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    completeCollection(
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "completeCollection()"(
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    createdAt(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "createdAt()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    creator(overrides?: UnsignedTransaction): Promise<string>;

    "creator()"(overrides?: UnsignedTransaction): Promise<string>;

    decodeTokenId(
      _id: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<
      [BigNumber, BigNumber] & { itemId: BigNumber; issuedId: BigNumber }
    >;

    "decodeTokenId(uint256)"(
      _id: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<
      [BigNumber, BigNumber] & { itemId: BigNumber; issuedId: BigNumber }
    >;

    domainSeparator(overrides?: UnsignedTransaction): Promise<string>;

    "domainSeparator()"(overrides?: UnsignedTransaction): Promise<string>;

    editItemsData(
      _itemIds: BigNumberish[],
      _prices: BigNumberish[],
      _beneficiaries: string[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "editItemsData(uint256[],uint256[],address[],string[])"(
      _itemIds: BigNumberish[],
      _prices: BigNumberish[],
      _beneficiaries: string[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    encodeTokenId(
      _itemId: BigNumberish,
      _issuedId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "encodeTokenId(uint256,uint256)"(
      _itemId: BigNumberish,
      _issuedId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    executeMetaTransaction(
      userAddress: string,
      functionSignature: Arrayish,
      sigR: Arrayish,
      sigS: Arrayish,
      sigV: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)"(
      userAddress: string,
      functionSignature: Arrayish,
      sigR: Arrayish,
      sigS: Arrayish,
      sigV: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    getChainId(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "getChainId()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    getNonce(user: string, overrides?: UnsignedTransaction): Promise<BigNumber>;

    "getNonce(address)"(
      user: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    globalManagers(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "globalManagers(address)"(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    globalMinters(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "globalMinters(address)"(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    initialize(
      _name: string,
      _symbol: string,
      _baseURI: string,
      _creator: string,
      _shouldComplete: boolean,
      _isApproved: boolean,
      _rarities: string,
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "initialize(string,string,string,address,bool,bool,address,(string,uint256,address,string)[])"(
      _name: string,
      _symbol: string,
      _baseURI: string,
      _creator: string,
      _shouldComplete: boolean,
      _isApproved: boolean,
      _rarities: string,
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    isApproved(overrides?: UnsignedTransaction): Promise<boolean>;

    "isApproved()"(overrides?: UnsignedTransaction): Promise<boolean>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    isCompleted(overrides?: UnsignedTransaction): Promise<boolean>;

    "isCompleted()"(overrides?: UnsignedTransaction): Promise<boolean>;

    isEditable(overrides?: UnsignedTransaction): Promise<boolean>;

    "isEditable()"(overrides?: UnsignedTransaction): Promise<boolean>;

    isInitialized(overrides?: UnsignedTransaction): Promise<boolean>;

    "isInitialized()"(overrides?: UnsignedTransaction): Promise<boolean>;

    isMintingAllowed(overrides?: UnsignedTransaction): Promise<boolean>;

    "isMintingAllowed()"(overrides?: UnsignedTransaction): Promise<boolean>;

    issueTokens(
      _beneficiaries: string[],
      _itemIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "issueTokens(address[],uint256[])"(
      _beneficiaries: string[],
      _itemIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    itemManagers(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "itemManagers(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    itemMinters(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "itemMinters(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    items(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<
      [string, BigNumber, BigNumber, BigNumber, string, string, string] & {
        rarity: string;
        maxSupply: BigNumber;
        totalSupply: BigNumber;
        price: BigNumber;
        beneficiary: string;
        metadata: string;
        contentHash: string;
      }
    >;

    "items(uint256)"(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<
      [string, BigNumber, BigNumber, BigNumber, string, string, string] & {
        rarity: string;
        maxSupply: BigNumber;
        totalSupply: BigNumber;
        price: BigNumber;
        beneficiary: string;
        metadata: string;
        contentHash: string;
      }
    >;

    itemsCount(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "itemsCount()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    name(overrides?: UnsignedTransaction): Promise<string>;

    "name()"(overrides?: UnsignedTransaction): Promise<string>;

    owner(overrides?: UnsignedTransaction): Promise<string>;

    "owner()"(overrides?: UnsignedTransaction): Promise<string>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    rarities(overrides?: UnsignedTransaction): Promise<string>;

    "rarities()"(overrides?: UnsignedTransaction): Promise<string>;

    renounceOwnership(
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    rescueItems(
      _itemIds: BigNumberish[],
      _contentHashes: Arrayish[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "rescueItems(uint256[],bytes32[],string[])"(
      _itemIds: BigNumberish[],
      _contentHashes: Arrayish[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    safeBatchTransferFrom(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeBatchTransferFrom(address,address,uint256[],bytes)"(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    safeTransferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setApproved(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setApproved(bool)"(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setBaseURI(
      _baseURI: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setBaseURI(string)"(
      _baseURI: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setEditable(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setEditable(bool)"(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setItemsManagers(
      _itemIds: BigNumberish[],
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setItemsManagers(uint256[],address[],bool[])"(
      _itemIds: BigNumberish[],
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setItemsMinters(
      _itemIds: BigNumberish[],
      _minters: string[],
      _values: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setItemsMinters(uint256[],address[],uint256[])"(
      _itemIds: BigNumberish[],
      _minters: string[],
      _values: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setManagers(
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setManagers(address[],bool[])"(
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    setMinters(
      _minters: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setMinters(address[],bool[])"(
      _minters: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    symbol(overrides?: UnsignedTransaction): Promise<string>;

    "symbol()"(overrides?: UnsignedTransaction): Promise<string>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "tokenURI(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    totalSupply(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "totalSupply()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    transferCreatorship(
      _newCreator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferCreatorship(address)"(
      _newCreator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;
  };

  COLLECTION_HASH(overrides?: UnsignedTransaction): Promise<string>;

  "COLLECTION_HASH()"(overrides?: UnsignedTransaction): Promise<string>;

  ISSUED_ID_BITS(overrides?: UnsignedTransaction): Promise<number>;

  "ISSUED_ID_BITS()"(overrides?: UnsignedTransaction): Promise<number>;

  ITEM_ID_BITS(overrides?: UnsignedTransaction): Promise<number>;

  "ITEM_ID_BITS()"(overrides?: UnsignedTransaction): Promise<number>;

  MAX_ISSUED_ID(overrides?: UnsignedTransaction): Promise<BigNumber>;

  "MAX_ISSUED_ID()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

  MAX_ITEM_ID(overrides?: UnsignedTransaction): Promise<number>;

  "MAX_ITEM_ID()"(overrides?: UnsignedTransaction): Promise<number>;

  addItems(
    _items: {
      rarity: string;
      price: BigNumberish;
      beneficiary: string;
      metadata: string;
    }[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "addItems((string,uint256,address,string)[])"(
    _items: {
      rarity: string;
      price: BigNumberish;
      beneficiary: string;
      metadata: string;
    }[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    to: string,
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  balanceOf(owner: string, overrides?: UnsignedTransaction): Promise<BigNumber>;

  "balanceOf(address)"(
    owner: string,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  baseURI(overrides?: UnsignedTransaction): Promise<string>;

  "baseURI()"(overrides?: UnsignedTransaction): Promise<string>;

  batchTransferFrom(
    _from: string,
    _to: string,
    _tokenIds: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "batchTransferFrom(address,address,uint256[])"(
    _from: string,
    _to: string,
    _tokenIds: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  completeCollection(
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "completeCollection()"(
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  createdAt(overrides?: UnsignedTransaction): Promise<BigNumber>;

  "createdAt()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

  creator(overrides?: UnsignedTransaction): Promise<string>;

  "creator()"(overrides?: UnsignedTransaction): Promise<string>;

  decodeTokenId(
    _id: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<
    [BigNumber, BigNumber] & { itemId: BigNumber; issuedId: BigNumber }
  >;

  "decodeTokenId(uint256)"(
    _id: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<
    [BigNumber, BigNumber] & { itemId: BigNumber; issuedId: BigNumber }
  >;

  domainSeparator(overrides?: UnsignedTransaction): Promise<string>;

  "domainSeparator()"(overrides?: UnsignedTransaction): Promise<string>;

  editItemsData(
    _itemIds: BigNumberish[],
    _prices: BigNumberish[],
    _beneficiaries: string[],
    _metadatas: string[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "editItemsData(uint256[],uint256[],address[],string[])"(
    _itemIds: BigNumberish[],
    _prices: BigNumberish[],
    _beneficiaries: string[],
    _metadatas: string[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  encodeTokenId(
    _itemId: BigNumberish,
    _issuedId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "encodeTokenId(uint256,uint256)"(
    _itemId: BigNumberish,
    _issuedId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  executeMetaTransaction(
    userAddress: string,
    functionSignature: Arrayish,
    sigR: Arrayish,
    sigS: Arrayish,
    sigV: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)"(
    userAddress: string,
    functionSignature: Arrayish,
    sigR: Arrayish,
    sigS: Arrayish,
    sigV: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  getApproved(
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "getApproved(uint256)"(
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  getChainId(overrides?: UnsignedTransaction): Promise<BigNumber>;

  "getChainId()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

  getNonce(user: string, overrides?: UnsignedTransaction): Promise<BigNumber>;

  "getNonce(address)"(
    user: string,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  globalManagers(
    arg0: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "globalManagers(address)"(
    arg0: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  globalMinters(
    arg0: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "globalMinters(address)"(
    arg0: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  initialize(
    _name: string,
    _symbol: string,
    _baseURI: string,
    _creator: string,
    _shouldComplete: boolean,
    _isApproved: boolean,
    _rarities: string,
    _items: {
      rarity: string;
      price: BigNumberish;
      beneficiary: string;
      metadata: string;
    }[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "initialize(string,string,string,address,bool,bool,address,(string,uint256,address,string)[])"(
    _name: string,
    _symbol: string,
    _baseURI: string,
    _creator: string,
    _shouldComplete: boolean,
    _isApproved: boolean,
    _rarities: string,
    _items: {
      rarity: string;
      price: BigNumberish;
      beneficiary: string;
      metadata: string;
    }[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  isApproved(overrides?: UnsignedTransaction): Promise<boolean>;

  "isApproved()"(overrides?: UnsignedTransaction): Promise<boolean>;

  isApprovedForAll(
    owner: string,
    operator: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "isApprovedForAll(address,address)"(
    owner: string,
    operator: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  isCompleted(overrides?: UnsignedTransaction): Promise<boolean>;

  "isCompleted()"(overrides?: UnsignedTransaction): Promise<boolean>;

  isEditable(overrides?: UnsignedTransaction): Promise<boolean>;

  "isEditable()"(overrides?: UnsignedTransaction): Promise<boolean>;

  isInitialized(overrides?: UnsignedTransaction): Promise<boolean>;

  "isInitialized()"(overrides?: UnsignedTransaction): Promise<boolean>;

  isMintingAllowed(overrides?: UnsignedTransaction): Promise<boolean>;

  "isMintingAllowed()"(overrides?: UnsignedTransaction): Promise<boolean>;

  issueTokens(
    _beneficiaries: string[],
    _itemIds: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "issueTokens(address[],uint256[])"(
    _beneficiaries: string[],
    _itemIds: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  itemManagers(
    arg0: BigNumberish,
    arg1: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "itemManagers(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  itemMinters(
    arg0: BigNumberish,
    arg1: string,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "itemMinters(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  items(
    arg0: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<
    [string, BigNumber, BigNumber, BigNumber, string, string, string] & {
      rarity: string;
      maxSupply: BigNumber;
      totalSupply: BigNumber;
      price: BigNumber;
      beneficiary: string;
      metadata: string;
      contentHash: string;
    }
  >;

  "items(uint256)"(
    arg0: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<
    [string, BigNumber, BigNumber, BigNumber, string, string, string] & {
      rarity: string;
      maxSupply: BigNumber;
      totalSupply: BigNumber;
      price: BigNumber;
      beneficiary: string;
      metadata: string;
      contentHash: string;
    }
  >;

  itemsCount(overrides?: UnsignedTransaction): Promise<BigNumber>;

  "itemsCount()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

  name(overrides?: UnsignedTransaction): Promise<string>;

  "name()"(overrides?: UnsignedTransaction): Promise<string>;

  owner(overrides?: UnsignedTransaction): Promise<string>;

  "owner()"(overrides?: UnsignedTransaction): Promise<string>;

  ownerOf(
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "ownerOf(uint256)"(
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  rarities(overrides?: UnsignedTransaction): Promise<string>;

  "rarities()"(overrides?: UnsignedTransaction): Promise<string>;

  renounceOwnership(
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  rescueItems(
    _itemIds: BigNumberish[],
    _contentHashes: Arrayish[],
    _metadatas: string[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "rescueItems(uint256[],bytes32[],string[])"(
    _itemIds: BigNumberish[],
    _contentHashes: Arrayish[],
    _metadatas: string[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  safeBatchTransferFrom(
    _from: string,
    _to: string,
    _tokenIds: BigNumberish[],
    _data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeBatchTransferFrom(address,address,uint256[],bytes)"(
    _from: string,
    _to: string,
    _tokenIds: BigNumberish[],
    _data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  safeTransferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    operator: string,
    approved: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setApprovalForAll(address,bool)"(
    operator: string,
    approved: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setApproved(
    _value: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setApproved(bool)"(
    _value: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setBaseURI(
    _baseURI: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setBaseURI(string)"(
    _baseURI: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setEditable(
    _value: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setEditable(bool)"(
    _value: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setItemsManagers(
    _itemIds: BigNumberish[],
    _managers: string[],
    _values: boolean[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setItemsManagers(uint256[],address[],bool[])"(
    _itemIds: BigNumberish[],
    _managers: string[],
    _values: boolean[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setItemsMinters(
    _itemIds: BigNumberish[],
    _minters: string[],
    _values: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setItemsMinters(uint256[],address[],uint256[])"(
    _itemIds: BigNumberish[],
    _minters: string[],
    _values: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setManagers(
    _managers: string[],
    _values: boolean[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setManagers(address[],bool[])"(
    _managers: string[],
    _values: boolean[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  setMinters(
    _minters: string[],
    _values: boolean[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setMinters(address[],bool[])"(
    _minters: string[],
    _values: boolean[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  symbol(overrides?: UnsignedTransaction): Promise<string>;

  "symbol()"(overrides?: UnsignedTransaction): Promise<string>;

  tokenByIndex(
    index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "tokenByIndex(uint256)"(
    index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  tokenOfOwnerByIndex(
    owner: string,
    index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "tokenOfOwnerByIndex(address,uint256)"(
    owner: string,
    index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  tokenURI(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "tokenURI(uint256)"(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  totalSupply(overrides?: UnsignedTransaction): Promise<BigNumber>;

  "totalSupply()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

  transferCreatorship(
    _newCreator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferCreatorship(address)"(
    _newCreator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  filters: {
    AddItem(_itemId: BigNumberish | null, _item: null): EventFilter;

    Approval(
      owner: string | null,
      approved: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;

    ApprovalForAll(
      owner: string | null,
      operator: string | null,
      approved: null
    ): EventFilter;

    BaseURI(_oldBaseURI: null, _newBaseURI: null): EventFilter;

    Complete(): EventFilter;

    CreatorshipTransferred(
      _previousCreator: string | null,
      _newCreator: string | null
    ): EventFilter;

    Issue(
      _beneficiary: string | null,
      _tokenId: BigNumberish | null,
      _itemId: BigNumberish | null,
      _issuedId: null,
      _caller: null
    ): EventFilter;

    MetaTransactionExecuted(
      userAddress: null,
      relayerAddress: null,
      functionSignature: null
    ): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    RescueItem(
      _itemId: BigNumberish | null,
      _contentHash: null,
      _metadata: null
    ): EventFilter;

    SetApproved(_previousValue: null, _newValue: null): EventFilter;

    SetEditable(_previousValue: null, _newValue: null): EventFilter;

    SetGlobalManager(_manager: string | null, _value: null): EventFilter;

    SetGlobalMinter(_minter: string | null, _value: null): EventFilter;

    SetItemManager(
      _itemId: BigNumberish | null,
      _manager: string | null,
      _value: null
    ): EventFilter;

    SetItemMinter(
      _itemId: BigNumberish | null,
      _minter: string | null,
      _value: null
    ): EventFilter;

    Transfer(
      from: string | null,
      to: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;

    UpdateItemData(
      _itemId: BigNumberish | null,
      _price: null,
      _beneficiary: null,
      _metadata: null
    ): EventFilter;
  };

  estimate: {
    COLLECTION_HASH(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "COLLECTION_HASH()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    ISSUED_ID_BITS(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "ISSUED_ID_BITS()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    ITEM_ID_BITS(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "ITEM_ID_BITS()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    MAX_ISSUED_ID(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "MAX_ISSUED_ID()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    MAX_ITEM_ID(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "MAX_ITEM_ID()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    addItems(
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "addItems((string,uint256,address,string)[])"(
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    balanceOf(
      owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    baseURI(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "baseURI()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    batchTransferFrom(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "batchTransferFrom(address,address,uint256[])"(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    completeCollection(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "completeCollection()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    createdAt(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "createdAt()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    creator(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "creator()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    decodeTokenId(
      _id: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "decodeTokenId(uint256)"(
      _id: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    domainSeparator(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "domainSeparator()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    editItemsData(
      _itemIds: BigNumberish[],
      _prices: BigNumberish[],
      _beneficiaries: string[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "editItemsData(uint256[],uint256[],address[],string[])"(
      _itemIds: BigNumberish[],
      _prices: BigNumberish[],
      _beneficiaries: string[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    encodeTokenId(
      _itemId: BigNumberish,
      _issuedId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "encodeTokenId(uint256,uint256)"(
      _itemId: BigNumberish,
      _issuedId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    executeMetaTransaction(
      userAddress: string,
      functionSignature: Arrayish,
      sigR: Arrayish,
      sigS: Arrayish,
      sigV: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)"(
      userAddress: string,
      functionSignature: Arrayish,
      sigR: Arrayish,
      sigS: Arrayish,
      sigV: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getChainId(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "getChainId()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    getNonce(user: string, overrides?: UnsignedTransaction): Promise<BigNumber>;

    "getNonce(address)"(
      user: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    globalManagers(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "globalManagers(address)"(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    globalMinters(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "globalMinters(address)"(
      arg0: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    initialize(
      _name: string,
      _symbol: string,
      _baseURI: string,
      _creator: string,
      _shouldComplete: boolean,
      _isApproved: boolean,
      _rarities: string,
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "initialize(string,string,string,address,bool,bool,address,(string,uint256,address,string)[])"(
      _name: string,
      _symbol: string,
      _baseURI: string,
      _creator: string,
      _shouldComplete: boolean,
      _isApproved: boolean,
      _rarities: string,
      _items: {
        rarity: string;
        price: BigNumberish;
        beneficiary: string;
        metadata: string;
      }[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    isApproved(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "isApproved()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    isCompleted(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "isCompleted()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    isEditable(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "isEditable()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    isInitialized(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "isInitialized()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    isMintingAllowed(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "isMintingAllowed()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    issueTokens(
      _beneficiaries: string[],
      _itemIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "issueTokens(address[],uint256[])"(
      _beneficiaries: string[],
      _itemIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    itemManagers(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "itemManagers(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    itemMinters(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "itemMinters(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    items(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "items(uint256)"(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    itemsCount(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "itemsCount()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    name(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "name()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    owner(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "owner()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    rarities(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "rarities()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    renounceOwnership(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    rescueItems(
      _itemIds: BigNumberish[],
      _contentHashes: Arrayish[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "rescueItems(uint256[],bytes32[],string[])"(
      _itemIds: BigNumberish[],
      _contentHashes: Arrayish[],
      _metadatas: string[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    safeBatchTransferFrom(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeBatchTransferFrom(address,address,uint256[],bytes)"(
      _from: string,
      _to: string,
      _tokenIds: BigNumberish[],
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    safeTransferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setApproved(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setApproved(bool)"(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setBaseURI(
      _baseURI: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setBaseURI(string)"(
      _baseURI: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setEditable(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setEditable(bool)"(
      _value: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setItemsManagers(
      _itemIds: BigNumberish[],
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setItemsManagers(uint256[],address[],bool[])"(
      _itemIds: BigNumberish[],
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setItemsMinters(
      _itemIds: BigNumberish[],
      _minters: string[],
      _values: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setItemsMinters(uint256[],address[],uint256[])"(
      _itemIds: BigNumberish[],
      _minters: string[],
      _values: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setManagers(
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setManagers(address[],bool[])"(
      _managers: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setMinters(
      _minters: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setMinters(address[],bool[])"(
      _minters: string[],
      _values: boolean[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    symbol(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "symbol()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    totalSupply(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "totalSupply()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    transferCreatorship(
      _newCreator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferCreatorship(address)"(
      _newCreator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;
  };
}
