/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TypedEventDescription, TypedFunctionDescription } from ".";

interface EstateRegistryInterface extends Interface {
  functions: {
    supportsInterface: TypedFunctionDescription<{
      encode([_interfaceId]: [Arrayish]): string;
    }>;

    name: TypedFunctionDescription<{ encode([]: []): string }>;

    initialize: TypedFunctionDescription<{
      encode([_name, _symbol, _registry]: [string, string, string]): string;
    }>;

    updateManager: TypedFunctionDescription<{
      encode([,]: [string, string]): string;
    }>;

    getApproved: TypedFunctionDescription<{
      encode([_tokenId]: [BigNumberish]): string;
    }>;

    approve: TypedFunctionDescription<{
      encode([_to, _tokenId]: [string, BigNumberish]): string;
    }>;

    landIdEstate: TypedFunctionDescription<{
      encode([]: [BigNumberish]): string;
    }>;

    onERC721Received: TypedFunctionDescription<{
      encode([_operator, _from, _tokenId, _data]: [
        string,
        string,
        BigNumberish,
        Arrayish
      ]): string;
    }>;

    getFingerprint: TypedFunctionDescription<{
      encode([estateId]: [BigNumberish]): string;
    }>;

    totalSupply: TypedFunctionDescription<{ encode([]: []): string }>;

    setLandUpdateOperator: TypedFunctionDescription<{
      encode([estateId, landId, operator]: [
        BigNumberish,
        BigNumberish,
        string
      ]): string;
    }>;

    transferFrom: TypedFunctionDescription<{
      encode([_from, _to, _tokenId]: [string, string, BigNumberish]): string;
    }>;

    updateLandData: TypedFunctionDescription<{
      encode([estateId, landId, data]: [
        BigNumberish,
        BigNumberish,
        string
      ]): string;
    }>;

    tokenOfOwnerByIndex: TypedFunctionDescription<{
      encode([_owner, _index]: [string, BigNumberish]): string;
    }>;

    estateLandIds: TypedFunctionDescription<{
      encode([,]: [BigNumberish, BigNumberish]): string;
    }>;

    setManyLandUpdateOperator: TypedFunctionDescription<{
      encode([_estateId, _landIds, _operator]: [
        BigNumberish,
        BigNumberish[],
        string
      ]): string;
    }>;

    transferManyLands: TypedFunctionDescription<{
      encode([estateId, landIds, destinatary]: [
        BigNumberish,
        BigNumberish[],
        string
      ]): string;
    }>;

    updateManyLandData: TypedFunctionDescription<{
      encode([estateId, landIds, data]: [
        BigNumberish,
        BigNumberish[],
        string
      ]): string;
    }>;

    safeTransferFrom: TypedFunctionDescription<{
      encode([_from, _to, _tokenId]: [string, string, BigNumberish]): string;
    }>;

    exists: TypedFunctionDescription<{
      encode([_tokenId]: [BigNumberish]): string;
    }>;

    tokenByIndex: TypedFunctionDescription<{
      encode([_index]: [BigNumberish]): string;
    }>;

    setLANDRegistry: TypedFunctionDescription<{
      encode([_registry]: [string]): string;
    }>;

    updateMetadata: TypedFunctionDescription<{
      encode([estateId, metadata]: [BigNumberish, string]): string;
    }>;

    ping: TypedFunctionDescription<{ encode([]: []): string }>;

    ownerOf: TypedFunctionDescription<{
      encode([_tokenId]: [BigNumberish]): string;
    }>;

    isUpdateAuthorized: TypedFunctionDescription<{
      encode([operator, estateId]: [string, BigNumberish]): string;
    }>;

    balanceOf: TypedFunctionDescription<{ encode([_owner]: [string]): string }>;

    setManyUpdateOperator: TypedFunctionDescription<{
      encode([_estateIds, _operator]: [BigNumberish[], string]): string;
    }>;

    safeTransferManyFrom: TypedFunctionDescription<{
      encode([from, to, estateIds]: [string, string, BigNumberish[]]): string;
    }>;

    registry: TypedFunctionDescription<{ encode([]: []): string }>;

    owner: TypedFunctionDescription<{ encode([]: []): string }>;

    verifyFingerprint: TypedFunctionDescription<{
      encode([estateId, fingerprint]: [BigNumberish, Arrayish]): string;
    }>;

    symbol: TypedFunctionDescription<{ encode([]: []): string }>;

    updateOperator: TypedFunctionDescription<{
      encode([]: [BigNumberish]): string;
    }>;

    estateLandIndex: TypedFunctionDescription<{
      encode([,]: [BigNumberish, BigNumberish]): string;
    }>;

    setApprovalForAll: TypedFunctionDescription<{
      encode([_to, _approved]: [string, boolean]): string;
    }>;

    transferLand: TypedFunctionDescription<{
      encode([estateId, landId, destinatary]: [
        BigNumberish,
        BigNumberish,
        string
      ]): string;
    }>;

    getMetadata: TypedFunctionDescription<{
      encode([estateId]: [BigNumberish]): string;
    }>;

    setUpdateOperator: TypedFunctionDescription<{
      encode([estateId, operator]: [BigNumberish, string]): string;
    }>;

    getLandEstateId: TypedFunctionDescription<{
      encode([landId]: [BigNumberish]): string;
    }>;

    isMigrated: TypedFunctionDescription<{
      encode([contractName, migrationId]: [string, string]): string;
    }>;

    tokenURI: TypedFunctionDescription<{
      encode([_tokenId]: [BigNumberish]): string;
    }>;

    mint: TypedFunctionDescription<{
      encode([to, metadata]: [string, string]): string;
    }>;

    isApprovedForAll: TypedFunctionDescription<{
      encode([_owner, _operator]: [string, string]): string;
    }>;

    setUpdateManager: TypedFunctionDescription<{
      encode([_owner, _operator, _approved]: [string, string, boolean]): string;
    }>;

    transferOwnership: TypedFunctionDescription<{
      encode([newOwner]: [string]): string;
    }>;

    getEstateSize: TypedFunctionDescription<{
      encode([estateId]: [BigNumberish]): string;
    }>;
  };

  events: {
    OwnershipTransferred: TypedEventDescription<{
      encodeTopics([previousOwner, newOwner]: [
        string | null,
        string | null
      ]): string[];
    }>;

    Transfer: TypedEventDescription<{
      encodeTopics([_from, _to, _tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    Approval: TypedEventDescription<{
      encodeTopics([_owner, _approved, _tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    ApprovalForAll: TypedEventDescription<{
      encodeTopics([_owner, _operator, _approved]: [
        string | null,
        string | null,
        null
      ]): string[];
    }>;

    CreateEstate: TypedEventDescription<{
      encodeTopics([_owner, _estateId, _data]: [
        string | null,
        BigNumberish | null,
        null
      ]): string[];
    }>;

    AddLand: TypedEventDescription<{
      encodeTopics([_estateId, _landId]: [
        BigNumberish | null,
        BigNumberish | null
      ]): string[];
    }>;

    RemoveLand: TypedEventDescription<{
      encodeTopics([_estateId, _landId, _destinatary]: [
        BigNumberish | null,
        BigNumberish | null,
        string | null
      ]): string[];
    }>;

    Update: TypedEventDescription<{
      encodeTopics([_assetId, _holder, _operator, _data]: [
        BigNumberish | null,
        string | null,
        string | null,
        null
      ]): string[];
    }>;

    UpdateOperator: TypedEventDescription<{
      encodeTopics([_estateId, _operator]: [
        BigNumberish | null,
        string | null
      ]): string[];
    }>;

    UpdateManager: TypedEventDescription<{
      encodeTopics([_owner, _operator, _caller, _approved]: [
        string | null,
        string | null,
        string | null,
        null
      ]): string[];
    }>;

    SetLANDRegistry: TypedEventDescription<{
      encodeTopics([_registry]: [string | null]): string[];
    }>;

    Migrated: TypedEventDescription<{
      encodeTopics([contractName, migrationId]: [null, null]): string[];
    }>;
  };
}

export class EstateRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): EstateRegistry;
  attach(addressOrName: string): EstateRegistry;
  deployed(): Promise<EstateRegistry>;

  on(event: EventFilter | string, listener: Listener): EstateRegistry;
  once(event: EventFilter | string, listener: Listener): EstateRegistry;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): EstateRegistry;
  removeAllListeners(eventName: EventFilter | string): EstateRegistry;
  removeListener(eventName: any, listener: Listener): EstateRegistry;

  interface: EstateRegistryInterface;

  functions: {
    supportsInterface(
      _interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      _interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    name(overrides?: UnsignedTransaction): Promise<string>;

    "name()"(overrides?: UnsignedTransaction): Promise<string>;

    initialize(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "initialize(string,string,address)"(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "initialize(string,string)"(
      _name: string,
      _symbol: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "initialize()"(
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      _sender: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    updateManager(
      arg0: string,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "updateManager(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "getApproved(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    approve(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    landIdEstate(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "landIdEstate(uint256)"(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    getFingerprint(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "getFingerprint(uint256)"(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    totalSupply(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "totalSupply()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    setLandUpdateOperator(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setLandUpdateOperator(uint256,uint256,address)"(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    updateLandData(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "updateLandData(uint256,uint256,string)"(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    estateLandIds(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "estateLandIds(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setManyLandUpdateOperator(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setManyLandUpdateOperator(uint256,uint256[],address)"(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    transferManyLands(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferManyLands(uint256,uint256[],address)"(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    updateManyLandData(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "updateManyLandData(uint256,uint256[],string)"(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    safeTransferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    exists(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "exists(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setLANDRegistry(
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setLANDRegistry(address)"(
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    updateMetadata(
      estateId: BigNumberish,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "updateMetadata(uint256,string)"(
      estateId: BigNumberish,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    ping(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

    "ping()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "ownerOf(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    isUpdateAuthorized(
      operator: string,
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "isUpdateAuthorized(address,uint256)"(
      operator: string,
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    balanceOf(
      _owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "balanceOf(address)"(
      _owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setManyUpdateOperator(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setManyUpdateOperator(uint256[],address)"(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    safeTransferManyFrom(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeTransferManyFrom(address,address,uint256[])"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "safeTransferManyFrom(address,address,uint256[],bytes)"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    registry(overrides?: UnsignedTransaction): Promise<string>;

    "registry()"(overrides?: UnsignedTransaction): Promise<string>;

    owner(overrides?: UnsignedTransaction): Promise<string>;

    "owner()"(overrides?: UnsignedTransaction): Promise<string>;

    verifyFingerprint(
      estateId: BigNumberish,
      fingerprint: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "verifyFingerprint(uint256,bytes)"(
      estateId: BigNumberish,
      fingerprint: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    symbol(overrides?: UnsignedTransaction): Promise<string>;

    "symbol()"(overrides?: UnsignedTransaction): Promise<string>;

    updateOperator(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "updateOperator(uint256)"(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    estateLandIndex(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "estateLandIndex(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setApprovalForAll(
      _to: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setApprovalForAll(address,bool)"(
      _to: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    transferLand(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferLand(uint256,uint256,address)"(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    getMetadata(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "getMetadata(uint256)"(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    setUpdateOperator(
      estateId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setUpdateOperator(uint256,address)"(
      estateId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    getLandEstateId(
      landId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getLandEstateId(uint256)"(
      landId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    isMigrated(
      contractName: string,
      migrationId: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "isMigrated(string,string)"(
      contractName: string,
      migrationId: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    "tokenURI(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<string>;

    mint(
      to: string,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "mint(address,string)"(
      to: string,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    "isApprovedForAll(address,address)"(
      _owner: string,
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<boolean>;

    setUpdateManager(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "setUpdateManager(address,address,bool)"(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<ContractTransaction>;

    getEstateSize(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getEstateSize(uint256)"(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;
  };

  supportsInterface(
    _interfaceId: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    _interfaceId: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  name(overrides?: UnsignedTransaction): Promise<string>;

  "name()"(overrides?: UnsignedTransaction): Promise<string>;

  initialize(
    _name: string,
    _symbol: string,
    _registry: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "initialize(string,string,address)"(
    _name: string,
    _symbol: string,
    _registry: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "initialize(string,string)"(
    _name: string,
    _symbol: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "initialize()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  "initialize(address)"(
    _sender: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  updateManager(
    arg0: string,
    arg1: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "updateManager(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  getApproved(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "getApproved(uint256)"(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  approve(
    _to: string,
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    _to: string,
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  landIdEstate(
    arg0: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "landIdEstate(uint256)"(
    arg0: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  onERC721Received(
    _operator: string,
    _from: string,
    _tokenId: BigNumberish,
    _data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "onERC721Received(address,address,uint256,bytes)"(
    _operator: string,
    _from: string,
    _tokenId: BigNumberish,
    _data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  getFingerprint(
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "getFingerprint(uint256)"(
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  totalSupply(overrides?: UnsignedTransaction): Promise<BigNumber>;

  "totalSupply()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

  setLandUpdateOperator(
    estateId: BigNumberish,
    landId: BigNumberish,
    operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setLandUpdateOperator(uint256,uint256,address)"(
    estateId: BigNumberish,
    landId: BigNumberish,
    operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  transferFrom(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  updateLandData(
    estateId: BigNumberish,
    landId: BigNumberish,
    data: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "updateLandData(uint256,uint256,string)"(
    estateId: BigNumberish,
    landId: BigNumberish,
    data: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  tokenOfOwnerByIndex(
    _owner: string,
    _index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "tokenOfOwnerByIndex(address,uint256)"(
    _owner: string,
    _index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  estateLandIds(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "estateLandIds(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  setManyLandUpdateOperator(
    _estateId: BigNumberish,
    _landIds: BigNumberish[],
    _operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setManyLandUpdateOperator(uint256,uint256[],address)"(
    _estateId: BigNumberish,
    _landIds: BigNumberish[],
    _operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  transferManyLands(
    estateId: BigNumberish,
    landIds: BigNumberish[],
    destinatary: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferManyLands(uint256,uint256[],address)"(
    estateId: BigNumberish,
    landIds: BigNumberish[],
    destinatary: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  updateManyLandData(
    estateId: BigNumberish,
    landIds: BigNumberish[],
    data: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "updateManyLandData(uint256,uint256[],string)"(
    estateId: BigNumberish,
    landIds: BigNumberish[],
    data: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  safeTransferFrom(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    _data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  exists(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "exists(uint256)"(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  tokenByIndex(
    _index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "tokenByIndex(uint256)"(
    _index: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  setLANDRegistry(
    _registry: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setLANDRegistry(address)"(
    _registry: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  updateMetadata(
    estateId: BigNumberish,
    metadata: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "updateMetadata(uint256,string)"(
    estateId: BigNumberish,
    metadata: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  ping(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  "ping()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  ownerOf(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "ownerOf(uint256)"(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  isUpdateAuthorized(
    operator: string,
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "isUpdateAuthorized(address,uint256)"(
    operator: string,
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  balanceOf(
    _owner: string,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "balanceOf(address)"(
    _owner: string,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  setManyUpdateOperator(
    _estateIds: BigNumberish[],
    _operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setManyUpdateOperator(uint256[],address)"(
    _estateIds: BigNumberish[],
    _operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  safeTransferManyFrom(
    from: string,
    to: string,
    estateIds: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeTransferManyFrom(address,address,uint256[])"(
    from: string,
    to: string,
    estateIds: BigNumberish[],
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "safeTransferManyFrom(address,address,uint256[],bytes)"(
    from: string,
    to: string,
    estateIds: BigNumberish[],
    data: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  registry(overrides?: UnsignedTransaction): Promise<string>;

  "registry()"(overrides?: UnsignedTransaction): Promise<string>;

  owner(overrides?: UnsignedTransaction): Promise<string>;

  "owner()"(overrides?: UnsignedTransaction): Promise<string>;

  verifyFingerprint(
    estateId: BigNumberish,
    fingerprint: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "verifyFingerprint(uint256,bytes)"(
    estateId: BigNumberish,
    fingerprint: Arrayish,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  symbol(overrides?: UnsignedTransaction): Promise<string>;

  "symbol()"(overrides?: UnsignedTransaction): Promise<string>;

  updateOperator(
    arg0: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "updateOperator(uint256)"(
    arg0: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  estateLandIndex(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "estateLandIndex(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  setApprovalForAll(
    _to: string,
    _approved: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setApprovalForAll(address,bool)"(
    _to: string,
    _approved: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  transferLand(
    estateId: BigNumberish,
    landId: BigNumberish,
    destinatary: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferLand(uint256,uint256,address)"(
    estateId: BigNumberish,
    landId: BigNumberish,
    destinatary: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  getMetadata(
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "getMetadata(uint256)"(
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  setUpdateOperator(
    estateId: BigNumberish,
    operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setUpdateOperator(uint256,address)"(
    estateId: BigNumberish,
    operator: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  getLandEstateId(
    landId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "getLandEstateId(uint256)"(
    landId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  isMigrated(
    contractName: string,
    migrationId: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "isMigrated(string,string)"(
    contractName: string,
    migrationId: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  tokenURI(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  "tokenURI(uint256)"(
    _tokenId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<string>;

  mint(
    to: string,
    metadata: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "mint(address,string)"(
    to: string,
    metadata: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  isApprovedForAll(
    _owner: string,
    _operator: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  "isApprovedForAll(address,address)"(
    _owner: string,
    _operator: string,
    overrides?: UnsignedTransaction
  ): Promise<boolean>;

  setUpdateManager(
    _owner: string,
    _operator: string,
    _approved: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "setUpdateManager(address,address,bool)"(
    _owner: string,
    _operator: string,
    _approved: boolean,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: UnsignedTransaction
  ): Promise<ContractTransaction>;

  getEstateSize(
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  "getEstateSize(uint256)"(
    estateId: BigNumberish,
    overrides?: UnsignedTransaction
  ): Promise<BigNumber>;

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    Transfer(
      _from: string | null,
      _to: string | null,
      _tokenId: BigNumberish | null
    ): EventFilter;

    Approval(
      _owner: string | null,
      _approved: string | null,
      _tokenId: BigNumberish | null
    ): EventFilter;

    ApprovalForAll(
      _owner: string | null,
      _operator: string | null,
      _approved: null
    ): EventFilter;

    CreateEstate(
      _owner: string | null,
      _estateId: BigNumberish | null,
      _data: null
    ): EventFilter;

    AddLand(
      _estateId: BigNumberish | null,
      _landId: BigNumberish | null
    ): EventFilter;

    RemoveLand(
      _estateId: BigNumberish | null,
      _landId: BigNumberish | null,
      _destinatary: string | null
    ): EventFilter;

    Update(
      _assetId: BigNumberish | null,
      _holder: string | null,
      _operator: string | null,
      _data: null
    ): EventFilter;

    UpdateOperator(
      _estateId: BigNumberish | null,
      _operator: string | null
    ): EventFilter;

    UpdateManager(
      _owner: string | null,
      _operator: string | null,
      _caller: string | null,
      _approved: null
    ): EventFilter;

    SetLANDRegistry(_registry: string | null): EventFilter;

    Migrated(contractName: null, migrationId: null): EventFilter;
  };

  estimate: {
    supportsInterface(
      _interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      _interfaceId: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    name(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "name()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    initialize(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "initialize(string,string,address)"(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "initialize(string,string)"(
      _name: string,
      _symbol: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "initialize()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "initialize(address)"(
      _sender: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    updateManager(
      arg0: string,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "updateManager(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getApproved(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    approve(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    landIdEstate(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "landIdEstate(uint256)"(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getFingerprint(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getFingerprint(uint256)"(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    totalSupply(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "totalSupply()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    setLandUpdateOperator(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setLandUpdateOperator(uint256,uint256,address)"(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    updateLandData(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "updateLandData(uint256,uint256,string)"(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    estateLandIds(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "estateLandIds(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setManyLandUpdateOperator(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setManyLandUpdateOperator(uint256,uint256[],address)"(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    transferManyLands(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferManyLands(uint256,uint256[],address)"(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    updateManyLandData(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "updateManyLandData(uint256,uint256[],string)"(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    safeTransferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    exists(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "exists(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      _index: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setLANDRegistry(
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setLANDRegistry(address)"(
      _registry: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    updateMetadata(
      estateId: BigNumberish,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "updateMetadata(uint256,string)"(
      estateId: BigNumberish,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    ping(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "ping()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "ownerOf(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    isUpdateAuthorized(
      operator: string,
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "isUpdateAuthorized(address,uint256)"(
      operator: string,
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    balanceOf(
      _owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "balanceOf(address)"(
      _owner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setManyUpdateOperator(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setManyUpdateOperator(uint256[],address)"(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    safeTransferManyFrom(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeTransferManyFrom(address,address,uint256[])"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "safeTransferManyFrom(address,address,uint256[],bytes)"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      data: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    registry(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "registry()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    owner(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "owner()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    verifyFingerprint(
      estateId: BigNumberish,
      fingerprint: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "verifyFingerprint(uint256,bytes)"(
      estateId: BigNumberish,
      fingerprint: Arrayish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    symbol(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "symbol()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    updateOperator(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "updateOperator(uint256)"(
      arg0: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    estateLandIndex(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "estateLandIndex(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setApprovalForAll(
      _to: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setApprovalForAll(address,bool)"(
      _to: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    transferLand(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferLand(uint256,uint256,address)"(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getMetadata(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getMetadata(uint256)"(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setUpdateOperator(
      estateId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setUpdateOperator(uint256,address)"(
      estateId: BigNumberish,
      operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getLandEstateId(
      landId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getLandEstateId(uint256)"(
      landId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    isMigrated(
      contractName: string,
      migrationId: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "isMigrated(string,string)"(
      contractName: string,
      migrationId: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      _tokenId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    mint(
      to: string,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "mint(address,string)"(
      to: string,
      metadata: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "isApprovedForAll(address,address)"(
      _owner: string,
      _operator: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    setUpdateManager(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "setUpdateManager(address,address,bool)"(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    getEstateSize(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "getEstateSize(uint256)"(
      estateId: BigNumberish,
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;
  };
}
